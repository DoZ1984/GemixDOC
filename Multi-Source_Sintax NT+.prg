*** MAIN.PRG ***

{
[ compiler_options ]

{ program name;

[ include "file_name1.prg"
  ...
  include "file_nameN.prg" ]

[ const
    const_defs...
    ...
 end ]

[ declare
  { methods processtype_name
      method_decls...
    end }
    ...
 end ]

[ typedef
  { type name
      field_defs...
    end }
    ...
 end ]

[ global
    data_defs...
    ...
 end ]

{ [ local
      data_defs...
      ...
   end ] }

[ private
    data_defs...
     ...
 end ] 

begin
  instructions_code...
  ...
end }

{ [ process name([param_list]) *
[ public
    data_defs...
    ...
 end ]

[ private
    data_defs...
    ...
 end ]

[ methods
  { method [access_modifier] [return_type] name([param_list])
  [ private
      data_defs...
      ...
   end ]   
    begin
    ...
    end ] }
 end ]
 
begin
  instructions_code...
  ...
end ] }

{ [ function [access_modifier] [return_type] name([param_list]) *
[ private
    data_defs...
    ...
 end ]
begin
  instructions_code...
  ...
end ] }
}

--------------------------------------------------------------------------------------------

*** INCLUDES.PRG ***
{
[ compiler_options ]

[ include "file_name1.prg"
  ...
  include "file_nameN.prg" ]

[ const
    const_defs...
    ...
 end ]

[ declare
  { methods processtype_name
      method_decls...
    end }
    ...
 end ]

[ typedef
  { type name
      field_defs...
    end }
    ...
 end ]

[ global
    data_defs...
    ...
 end ]

{ [ local
      data_defs...
      ...
   end ] }

{ [ process name([param_list]) *
[ public
    data_defs...
    ...
 end ]

[ private
    data_defs...
    ...
 end ]

[ methods
  { method [access_modifier] [return_type] name([param_list])
  [ private
      data_defs...
      ...
   end ]   
  begin
    ...
  end ] }
end ]
 
begin
  instructions_code...
  ...
end ] }

{ [ function [access_modifier] [return_type] name([param_list]) *
[ private
    data_defs...
    ...
 end ]
begin
  instructions_code...
  ...
end ] }
}

--------------------------------------------------------------------------------------------

legend:
{ } = scope
[ ] = optional
*   = in any order